---
API: 2.1
OpenSesame: 3.3.12
Platform: posix
---
set width 1024
set uniform_coordinates yes
set title ExPsyLing2022_Class1
set subject_parity even
set subject_nr 0
set start experiment
set sound_sample_size -16
set sound_freq 48000
set sound_channels 2
set sound_buf_size 1024
set sampler_backend psycho
set round_decimals 2
set mouse_backend psycho
set keyboard_backend psycho
set height 768
set fullscreen no
set form_clicks no
set foreground white
set font_underline no
set font_size 18
set font_italic no
set font_family mono
set font_bold no
set experiment_path "/Users/ethan/Documents/GitHub/OpenSesame/Class1"
set disable_garbage_collection yes
set description "The main experiment item"
set coordinates uniform
set compensation 0
set color_backend psycho
set clock_backend psycho
set canvas_backend psycho
set background black

define sketchpad backward_mask
	set duration 32
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=30 html=yes show_if=always text="********" x=0 y=0 z_index=0

define loop block_1
	set source_file ""
	set source table
	set repeat 1
	set order random
	set description "Repeatedly runs another item"
	set cycles 80
	set continuous no
	set break_if_on_first yes
	set break_if never
	setcycle 0 condition identical
	setcycle 0 num_letters 4
	setcycle 0 type animal
	setcycle 0 prime bull
	setcycle 0 target bull
	setcycle 0 correct_response a
	setcycle 0 block block1
	setcycle 1 condition identical
	setcycle 1 num_letters 4
	setcycle 1 type animal
	setcycle 1 prime hare
	setcycle 1 target hare
	setcycle 1 correct_response a
	setcycle 1 block block1
	setcycle 2 condition identical
	setcycle 2 num_letters 4
	setcycle 2 type animal
	setcycle 2 prime mink
	setcycle 2 target mink
	setcycle 2 correct_response a
	setcycle 2 block block1
	setcycle 3 condition identical
	setcycle 3 num_letters 5
	setcycle 3 type animal
	setcycle 3 prime camel
	setcycle 3 target camel
	setcycle 3 correct_response a
	setcycle 3 block block1
	setcycle 4 condition identical
	setcycle 4 num_letters 5
	setcycle 4 type animal
	setcycle 4 prime mouse
	setcycle 4 target mouse
	setcycle 4 correct_response a
	setcycle 4 block block1
	setcycle 5 condition identical
	setcycle 5 num_letters 5
	setcycle 5 type animal
	setcycle 5 prime tiger
	setcycle 5 target tiger
	setcycle 5 correct_response a
	setcycle 5 block block1
	setcycle 6 condition identical
	setcycle 6 num_letters 6
	setcycle 6 type animal
	setcycle 6 prime cougar
	setcycle 6 target cougar
	setcycle 6 correct_response a
	setcycle 6 block block1
	setcycle 7 condition identical
	setcycle 7 num_letters 6
	setcycle 7 type animal
	setcycle 7 prime rabbit
	setcycle 7 target rabbit
	setcycle 7 correct_response a
	setcycle 7 block block1
	setcycle 8 condition identical
	setcycle 8 num_letters 7
	setcycle 8 type animal
	setcycle 8 prime buffalo
	setcycle 8 target buffalo
	setcycle 8 correct_response a
	setcycle 8 block block1
	setcycle 9 condition identical
	setcycle 9 num_letters 7
	setcycle 9 type animal
	setcycle 9 prime gorilla
	setcycle 9 target gorilla
	setcycle 9 correct_response a
	setcycle 9 block block1
	setcycle 10 condition identical
	setcycle 10 num_letters 7
	setcycle 10 type animal
	setcycle 10 prime octupus
	setcycle 10 target octupus
	setcycle 10 correct_response a
	setcycle 10 block block1
	setcycle 11 condition identical
	setcycle 11 num_letters 8
	setcycle 11 type animal
	setcycle 11 prime chipmunk
	setcycle 11 target chipmunk
	setcycle 11 correct_response a
	setcycle 11 block block1
	setcycle 12 condition identical
	setcycle 12 num_letters 8
	setcycle 12 type animal
	setcycle 12 prime tortoise
	setcycle 12 target tortoise
	setcycle 12 correct_response a
	setcycle 12 block block1
	setcycle 13 condition identical
	setcycle 13 num_letters 8
	setcycle 13 type animal
	setcycle 13 prime kangaroo
	setcycle 13 target kangaroo
	setcycle 13 correct_response a
	setcycle 13 block block1
	setcycle 14 condition identical
	setcycle 14 num_letters 4
	setcycle 14 type fruit_veg
	setcycle 14 prime bean
	setcycle 14 target bean
	setcycle 14 correct_response f
	setcycle 14 block block1
	setcycle 15 condition identical
	setcycle 15 num_letters 4
	setcycle 15 type fruit_veg
	setcycle 15 prime corn
	setcycle 15 target corn
	setcycle 15 correct_response f
	setcycle 15 block block1
	setcycle 16 condition identical
	setcycle 16 num_letters 4
	setcycle 16 type fruit_veg
	setcycle 16 prime lime
	setcycle 16 target lime
	setcycle 16 correct_response f
	setcycle 16 block block1
	setcycle 17 condition identical
	setcycle 17 num_letters 5
	setcycle 17 type fruit_veg
	setcycle 17 prime galia
	setcycle 17 target galia
	setcycle 17 correct_response f
	setcycle 17 block block1
	setcycle 18 condition identical
	setcycle 18 num_letters 5
	setcycle 18 type fruit_veg
	setcycle 18 prime mango
	setcycle 18 target mango
	setcycle 18 correct_response f
	setcycle 18 block block1
	setcycle 19 condition identical
	setcycle 19 num_letters 5
	setcycle 19 type fruit_veg
	setcycle 19 prime peach
	setcycle 19 target peach
	setcycle 19 correct_response f
	setcycle 19 block block1
	setcycle 20 condition identical
	setcycle 20 num_letters 6
	setcycle 20 type fruit_veg
	setcycle 20 prime cherry
	setcycle 20 target cherry
	setcycle 20 correct_response f
	setcycle 20 block block1
	setcycle 21 condition identical
	setcycle 21 num_letters 6
	setcycle 21 type fruit_veg
	setcycle 21 prime pepper
	setcycle 21 target pepper
	setcycle 21 correct_response f
	setcycle 21 block block1
	setcycle 22 condition identical
	setcycle 22 num_letters 7
	setcycle 22 type fruit_veg
	setcycle 22 prime apricot
	setcycle 22 target apricot
	setcycle 22 correct_response f
	setcycle 22 block block1
	setcycle 23 condition identical
	setcycle 23 num_letters 7
	setcycle 23 type fruit_veg
	setcycle 23 prime spinach
	setcycle 23 target spinach
	setcycle 23 correct_response f
	setcycle 23 block block1
	setcycle 24 condition identical
	setcycle 24 num_letters 7
	setcycle 24 type fruit_veg
	setcycle 24 prime lettuce
	setcycle 24 target lettuce
	setcycle 24 correct_response f
	setcycle 24 block block1
	setcycle 25 condition identical
	setcycle 25 num_letters 8
	setcycle 25 type fruit_veg
	setcycle 25 prime eggplant
	setcycle 25 target eggplant
	setcycle 25 correct_response f
	setcycle 25 block block1
	setcycle 26 condition identical
	setcycle 26 num_letters 8
	setcycle 26 type fruit_veg
	setcycle 26 prime mushroom
	setcycle 26 target mushroom
	setcycle 26 correct_response f
	setcycle 26 block block1
	setcycle 27 condition identical
	setcycle 27 num_letters 8
	setcycle 27 type fruit_veg
	setcycle 27 prime chickpea
	setcycle 27 target chickpea
	setcycle 27 correct_response f
	setcycle 27 block block1
	setcycle 28 condition "semi-scrambled"
	setcycle 28 num_letters 4
	setcycle 28 type animal
	setcycle 28 prime claf
	setcycle 28 target calf
	setcycle 28 correct_response a
	setcycle 28 block block1
	setcycle 29 condition "semi-scrambled"
	setcycle 29 num_letters 4
	setcycle 29 type animal
	setcycle 29 prime lmab
	setcycle 29 target lamb
	setcycle 29 correct_response a
	setcycle 29 block block1
	setcycle 30 condition "semi-scrambled"
	setcycle 30 num_letters 4
	setcycle 30 type animal
	setcycle 30 prime pmua
	setcycle 30 target puma
	setcycle 30 correct_response a
	setcycle 30 block block1
	setcycle 31 condition "semi-scrambled"
	setcycle 31 num_letters 5
	setcycle 31 type animal
	setcycle 31 prime hrsoe
	setcycle 31 target horse
	setcycle 31 correct_response a
	setcycle 31 block block1
	setcycle 32 condition "semi-scrambled"
	setcycle 32 num_letters 5
	setcycle 32 type animal
	setcycle 32 prime pdana
	setcycle 32 target panda
	setcycle 32 correct_response a
	setcycle 32 block block1
	setcycle 33 condition "semi-scrambled"
	setcycle 33 num_letters 6
	setcycle 33 type animal
	setcycle 33 prime wabmot
	setcycle 33 target wombat
	setcycle 33 correct_response a
	setcycle 33 block block1
	setcycle 34 condition "semi-scrambled"
	setcycle 34 num_letters 6
	setcycle 34 type animal
	setcycle 34 prime dekony
	setcycle 34 target donkey
	setcycle 34 correct_response a
	setcycle 34 block block1
	setcycle 35 condition "semi-scrambled"
	setcycle 35 num_letters 6
	setcycle 35 type animal
	setcycle 35 prime tlurte
	setcycle 35 target turtle
	setcycle 35 correct_response a
	setcycle 35 block block1
	setcycle 36 condition "semi-scrambled"
	setcycle 36 num_letters 7
	setcycle 36 type animal
	setcycle 36 prime cikechn
	setcycle 36 target chicken
	setcycle 36 correct_response a
	setcycle 36 block block1
	setcycle 37 condition "semi-scrambled"
	setcycle 37 num_letters 7
	setcycle 37 type animal
	setcycle 37 prime hmaestr
	setcycle 37 target hamster
	setcycle 37 correct_response a
	setcycle 37 block block1
	setcycle 38 condition "semi-scrambled"
	setcycle 38 num_letters 7
	setcycle 38 type animal
	setcycle 38 prime pneigun
	setcycle 38 target penguin
	setcycle 38 correct_response a
	setcycle 38 block block1
	setcycle 39 condition "semi-scrambled"
	setcycle 39 num_letters 8
	setcycle 39 type animal
	setcycle 39 prime eanhplet
	setcycle 39 target elephant
	setcycle 39 correct_response a
	setcycle 39 block block1
	setcycle 40 condition "semi-scrambled"
	setcycle 40 num_letters 8
	setcycle 40 type animal
	setcycle 40 prime shesaore
	setcycle 40 target seahorse
	setcycle 40 correct_response a
	setcycle 40 block block1
	setcycle 41 condition "semi-scrambled"
	setcycle 41 num_letters 4
	setcycle 41 type fruit_veg
	setcycle 41 prime dtae
	setcycle 41 target date
	setcycle 41 correct_response f
	setcycle 41 block block1
	setcycle 42 condition "semi-scrambled"
	setcycle 42 num_letters 4
	setcycle 42 type fruit_veg
	setcycle 42 prime paer
	setcycle 42 target pear
	setcycle 42 correct_response f
	setcycle 42 block block1
	setcycle 43 condition "semi-scrambled"
	setcycle 43 num_letters 4
	setcycle 43 type fruit_veg
	setcycle 43 prime klae
	setcycle 43 target kale
	setcycle 43 correct_response f
	setcycle 43 block block1
	setcycle 44 condition "semi-scrambled"
	setcycle 44 num_letters 5
	setcycle 44 type fruit_veg
	setcycle 44 prime loemn
	setcycle 44 target lemon
	setcycle 44 correct_response f
	setcycle 44 block block1
	setcycle 45 condition "semi-scrambled"
	setcycle 45 num_letters 5
	setcycle 45 type fruit_veg
	setcycle 45 prime oivle
	setcycle 45 target olive
	setcycle 45 correct_response f
	setcycle 45 block block1
	setcycle 46 condition "semi-scrambled"
	setcycle 46 num_letters 6
	setcycle 46 type fruit_veg
	setcycle 46 prime cuitrs
	setcycle 46 target citrus
	setcycle 46 correct_response f
	setcycle 46 block block1
	setcycle 47 condition "semi-scrambled"
	setcycle 47 num_letters 6
	setcycle 47 type fruit_veg
	setcycle 47 prime giarlc
	setcycle 47 target garlic
	setcycle 47 correct_response f
	setcycle 47 block block1
	setcycle 48 condition "semi-scrambled"
	setcycle 48 num_letters 6
	setcycle 48 type fruit_veg
	setcycle 48 prime ptatoo
	setcycle 48 target potato
	setcycle 48 correct_response f
	setcycle 48 block block1
	setcycle 49 condition "semi-scrambled"
	setcycle 49 num_letters 7
	setcycle 49 type fruit_veg
	setcycle 49 prime aoadcvo
	setcycle 49 target avocado
	setcycle 49 correct_response f
	setcycle 49 block block1
	setcycle 50 condition "semi-scrambled"
	setcycle 50 num_letters 7
	setcycle 50 type fruit_veg
	setcycle 50 prime rrbauhb
	setcycle 50 target rhubarb
	setcycle 50 correct_response f
	setcycle 50 block block1
	setcycle 51 condition "semi-scrambled"
	setcycle 51 num_letters 7
	setcycle 51 type fruit_veg
	setcycle 51 prime pianrsp
	setcycle 51 target parsnip
	setcycle 51 correct_response f
	setcycle 51 block block1
	setcycle 52 condition "semi-scrambled"
	setcycle 52 num_letters 8
	setcycle 52 type fruit_veg
	setcycle 52 prime slcaolin
	setcycle 52 target scallion
	setcycle 52 correct_response f
	setcycle 52 block block1
	setcycle 53 condition "semi-scrambled"
	setcycle 53 num_letters 8
	setcycle 53 type fruit_veg
	setcycle 53 prime btooeert
	setcycle 53 target beetroot
	setcycle 53 correct_response f
	setcycle 53 block block1
	setcycle 54 condition "fully-scrambled"
	setcycle 54 num_letters 4
	setcycle 54 type animal
	setcycle 54 prime aotg
	setcycle 54 target goat
	setcycle 54 correct_response a
	setcycle 54 block block1
	setcycle 55 condition "fully-scrambled"
	setcycle 55 num_letters 4
	setcycle 55 type animal
	setcycle 55 prime niol
	setcycle 55 target lion
	setcycle 55 correct_response a
	setcycle 55 block block1
	setcycle 56 condition "fully-scrambled"
	setcycle 56 num_letters 5
	setcycle 56 type animal
	setcycle 56 prime noibs
	setcycle 56 target bison
	setcycle 56 correct_response a
	setcycle 56 block block1
	setcycle 57 condition "fully-scrambled"
	setcycle 57 num_letters 5
	setcycle 57 type animal
	setcycle 57 prime akoal
	setcycle 57 target koala
	setcycle 57 correct_response a
	setcycle 57 block block1
	setcycle 58 condition "fully-scrambled"
	setcycle 58 num_letters 5
	setcycle 58 type animal
	setcycle 58 prime iohrn
	setcycle 58 target rhino
	setcycle 58 correct_response a
	setcycle 58 block block1
	setcycle 59 condition "fully-scrambled"
	setcycle 59 num_letters 6
	setcycle 59 type animal
	setcycle 59 prime ebreav
	setcycle 59 target beaver
	setcycle 59 correct_response a
	setcycle 59 block block1
	setcycle 60 condition "fully-scrambled"
	setcycle 60 num_letters 6
	setcycle 60 type animal
	setcycle 60 prime guajra
	setcycle 60 target jaguar
	setcycle 60 correct_response a
	setcycle 60 block block1
	setcycle 61 condition "fully-scrambled"
	setcycle 61 num_letters 6
	setcycle 61 type animal
	setcycle 61 prime uswlra
	setcycle 61 target walrus
	setcycle 61 correct_response a
	setcycle 61 block block1
	setcycle 62 condition "fully-scrambled"
	setcycle 62 num_letters 7
	setcycle 62 type animal
	setcycle 62 prime inhlpdo
	setcycle 62 target dolphin
	setcycle 62 correct_response a
	setcycle 62 block block1
	setcycle 63 condition "fully-scrambled"
	setcycle 63 num_letters 7
	setcycle 63 type animal
	setcycle 63 prime ocaornc
	setcycle 63 target raccoon
	setcycle 63 correct_response a
	setcycle 63 block block1
	setcycle 64 condition "fully-scrambled"
	setcycle 64 num_letters 8
	setcycle 64 type animal
	setcycle 64 prime etlaopen
	setcycle 64 target antelope
	setcycle 64 correct_response a
	setcycle 64 block block1
	setcycle 65 condition "fully-scrambled"
	setcycle 65 num_letters 8
	setcycle 65 type animal
	setcycle 65 prime lnafomg
	setcycle 65 target flamingo
	setcycle 65 correct_response a
	setcycle 65 block block1
	setcycle 66 condition "fully-scrambled"
	setcycle 66 num_letters 8
	setcycle 66 type animal
	setcycle 66 prime lypustap
	setcycle 66 target platypus
	setcycle 66 correct_response a
	setcycle 66 block block1
	setcycle 67 condition "fully-scrambled"
	setcycle 67 num_letters 4
	setcycle 67 type fruit_veg
	setcycle 67 prime opem
	setcycle 67 target pome
	setcycle 67 correct_response f
	setcycle 67 block block1
	setcycle 68 condition "fully-scrambled"
	setcycle 68 num_letters 4
	setcycle 68 type fruit_veg
	setcycle 68 prime mpul
	setcycle 68 target plum
	setcycle 68 correct_response f
	setcycle 68 block block1
	setcycle 69 condition "fully-scrambled"
	setcycle 69 num_letters 5
	setcycle 69 type fruit_veg
	setcycle 69 prime niono
	setcycle 69 target onion
	setcycle 69 correct_response f
	setcycle 69 block block1
	setcycle 70 condition "fully-scrambled"
	setcycle 70 num_letters 5
	setcycle 70 type fruit_veg
	setcycle 70 prime rpgea
	setcycle 70 target grape
	setcycle 70 correct_response f
	setcycle 70 block block1
	setcycle 71 condition "fully-scrambled"
	setcycle 71 num_letters 5
	setcycle 71 type fruit_veg
	setcycle 71 prime eprun
	setcycle 71 target prune
	setcycle 71 correct_response f
	setcycle 71 block block1
	setcycle 72 condition "fully-scrambled"
	setcycle 72 num_letters 6
	setcycle 72 type fruit_veg
	setcycle 72 prime rcoatr
	setcycle 72 target carrot
	setcycle 72 correct_response f
	setcycle 72 block block1
	setcycle 73 condition "fully-scrambled"
	setcycle 73 num_letters 6
	setcycle 73 type fruit_veg
	setcycle 73 prime enorag
	setcycle 73 target orange
	setcycle 73 correct_response f
	setcycle 73 block block1
	setcycle 74 condition "fully-scrambled"
	setcycle 74 num_letters 6
	setcycle 74 type fruit_veg
	setcycle 74 prime qsashu
	setcycle 74 target squash
	setcycle 74 correct_response f
	setcycle 74 block block1
	setcycle 75 condition "fully-scrambled"
	setcycle 75 num_letters 7
	setcycle 75 type fruit_veg
	setcycle 75 prime ncucoto
	setcycle 75 target coconut
	setcycle 75 correct_response f
	setcycle 75 block block1
	setcycle 76 condition "fully-scrambled"
	setcycle 76 num_letters 7
	setcycle 76 type fruit_veg
	setcycle 76 prime kpumpni
	setcycle 76 target pumpkin
	setcycle 76 correct_response f
	setcycle 76 block block1
	setcycle 77 condition "fully-scrambled"
	setcycle 77 num_letters 8
	setcycle 77 type fruit_veg
	setcycle 77 prime coblocir
	setcycle 77 target broccoli
	setcycle 77 correct_response f
	setcycle 77 block block1
	setcycle 78 condition "fully-scrambled"
	setcycle 78 num_letters 8
	setcycle 78 type fruit_veg
	setcycle 78 prime nchizuic
	setcycle 78 target zucchini
	setcycle 78 correct_response f
	setcycle 78 block block1
	setcycle 79 condition "fully-scrambled"
	setcycle 79 num_letters 8
	setcycle 79 type fruit_veg
	setcycle 79 prime mcurcube
	setcycle 79 target cucumber
	setcycle 79 correct_response f
	setcycle 79 block block1
	run trials

define loop block_2
	set source_file ""
	set source table
	set repeat 1
	set order random
	set description "Repeatedly runs another item"
	set cycles 80
	set continuous no
	set break_if_on_first yes
	set break_if never
	setcycle 0 condition identical
	setcycle 0 num_letters 4
	setcycle 0 type animal
	setcycle 0 prime calf
	setcycle 0 target calf
	setcycle 0 correct_response a
	setcycle 0 block block2
	setcycle 1 condition identical
	setcycle 1 num_letters 4
	setcycle 1 type animal
	setcycle 1 prime lamb
	setcycle 1 target lamb
	setcycle 1 correct_response a
	setcycle 1 block block2
	setcycle 2 condition identical
	setcycle 2 num_letters 4
	setcycle 2 type animal
	setcycle 2 prime puma
	setcycle 2 target puma
	setcycle 2 correct_response a
	setcycle 2 block block2
	setcycle 3 condition identical
	setcycle 3 num_letters 5
	setcycle 3 type animal
	setcycle 3 prime horse
	setcycle 3 target horse
	setcycle 3 correct_response a
	setcycle 3 block block2
	setcycle 4 condition identical
	setcycle 4 num_letters 5
	setcycle 4 type animal
	setcycle 4 prime panda
	setcycle 4 target panda
	setcycle 4 correct_response a
	setcycle 4 block block2
	setcycle 5 condition identical
	setcycle 5 num_letters 6
	setcycle 5 type animal
	setcycle 5 prime wombat
	setcycle 5 target wombat
	setcycle 5 correct_response a
	setcycle 5 block block2
	setcycle 6 condition identical
	setcycle 6 num_letters 6
	setcycle 6 type animal
	setcycle 6 prime donkey
	setcycle 6 target donkey
	setcycle 6 correct_response a
	setcycle 6 block block2
	setcycle 7 condition identical
	setcycle 7 num_letters 6
	setcycle 7 type animal
	setcycle 7 prime turtle
	setcycle 7 target turtle
	setcycle 7 correct_response a
	setcycle 7 block block2
	setcycle 8 condition identical
	setcycle 8 num_letters 7
	setcycle 8 type animal
	setcycle 8 prime chicken
	setcycle 8 target chicken
	setcycle 8 correct_response a
	setcycle 8 block block2
	setcycle 9 condition identical
	setcycle 9 num_letters 7
	setcycle 9 type animal
	setcycle 9 prime hamster
	setcycle 9 target hamster
	setcycle 9 correct_response a
	setcycle 9 block block2
	setcycle 10 condition identical
	setcycle 10 num_letters 7
	setcycle 10 type animal
	setcycle 10 prime penguin
	setcycle 10 target penguin
	setcycle 10 correct_response a
	setcycle 10 block block2
	setcycle 11 condition identical
	setcycle 11 num_letters 8
	setcycle 11 type animal
	setcycle 11 prime elephant
	setcycle 11 target elephant
	setcycle 11 correct_response a
	setcycle 11 block block2
	setcycle 12 condition identical
	setcycle 12 num_letters 8
	setcycle 12 type animal
	setcycle 12 prime seahorse
	setcycle 12 target seahorse
	setcycle 12 correct_response a
	setcycle 12 block block2
	setcycle 13 condition identical
	setcycle 13 num_letters 4
	setcycle 13 type fruit_veg
	setcycle 13 prime date
	setcycle 13 target date
	setcycle 13 correct_response f
	setcycle 13 block block2
	setcycle 14 condition identical
	setcycle 14 num_letters 4
	setcycle 14 type fruit_veg
	setcycle 14 prime pear
	setcycle 14 target pear
	setcycle 14 correct_response f
	setcycle 14 block block2
	setcycle 15 condition identical
	setcycle 15 num_letters 4
	setcycle 15 type fruit_veg
	setcycle 15 prime kale
	setcycle 15 target kale
	setcycle 15 correct_response f
	setcycle 15 block block2
	setcycle 16 condition identical
	setcycle 16 num_letters 5
	setcycle 16 type fruit_veg
	setcycle 16 prime lemon
	setcycle 16 target lemon
	setcycle 16 correct_response f
	setcycle 16 block block2
	setcycle 17 condition identical
	setcycle 17 num_letters 5
	setcycle 17 type fruit_veg
	setcycle 17 prime olive
	setcycle 17 target olive
	setcycle 17 correct_response f
	setcycle 17 block block2
	setcycle 18 condition identical
	setcycle 18 num_letters 6
	setcycle 18 type fruit_veg
	setcycle 18 prime citrus
	setcycle 18 target citrus
	setcycle 18 correct_response f
	setcycle 18 block block2
	setcycle 19 condition identical
	setcycle 19 num_letters 6
	setcycle 19 type fruit_veg
	setcycle 19 prime garlic
	setcycle 19 target garlic
	setcycle 19 correct_response f
	setcycle 19 block block2
	setcycle 20 condition identical
	setcycle 20 num_letters 6
	setcycle 20 type fruit_veg
	setcycle 20 prime potato
	setcycle 20 target potato
	setcycle 20 correct_response f
	setcycle 20 block block2
	setcycle 21 condition identical
	setcycle 21 num_letters 7
	setcycle 21 type fruit_veg
	setcycle 21 prime avocado
	setcycle 21 target avocado
	setcycle 21 correct_response f
	setcycle 21 block block2
	setcycle 22 condition identical
	setcycle 22 num_letters 7
	setcycle 22 type fruit_veg
	setcycle 22 prime rhubarb
	setcycle 22 target rhubarb
	setcycle 22 correct_response f
	setcycle 22 block block2
	setcycle 23 condition identical
	setcycle 23 num_letters 7
	setcycle 23 type fruit_veg
	setcycle 23 prime parsnip
	setcycle 23 target parsnip
	setcycle 23 correct_response f
	setcycle 23 block block2
	setcycle 24 condition identical
	setcycle 24 num_letters 8
	setcycle 24 type fruit_veg
	setcycle 24 prime scallion
	setcycle 24 target scallion
	setcycle 24 correct_response f
	setcycle 24 block block2
	setcycle 25 condition identical
	setcycle 25 num_letters 8
	setcycle 25 type fruit_veg
	setcycle 25 prime beetroot
	setcycle 25 target beetroot
	setcycle 25 correct_response f
	setcycle 25 block block2
	setcycle 26 condition "semi-scrambled"
	setcycle 26 num_letters 4
	setcycle 26 type animal
	setcycle 26 prime gaot
	setcycle 26 target goat
	setcycle 26 correct_response a
	setcycle 26 block block2
	setcycle 27 condition "semi-scrambled"
	setcycle 27 num_letters 4
	setcycle 27 type animal
	setcycle 27 prime loin
	setcycle 27 target lion
	setcycle 27 correct_response a
	setcycle 27 block block2
	setcycle 28 condition "semi-scrambled"
	setcycle 28 num_letters 5
	setcycle 28 type animal
	setcycle 28 prime boisn
	setcycle 28 target bison
	setcycle 28 correct_response a
	setcycle 28 block block2
	setcycle 29 condition "semi-scrambled"
	setcycle 29 num_letters 5
	setcycle 29 type animal
	setcycle 29 prime kaloa
	setcycle 29 target koala
	setcycle 29 correct_response a
	setcycle 29 block block2
	setcycle 30 condition "semi-scrambled"
	setcycle 30 num_letters 5
	setcycle 30 type animal
	setcycle 30 prime rnhio
	setcycle 30 target rhino
	setcycle 30 correct_response a
	setcycle 30 block block2
	setcycle 31 condition "semi-scrambled"
	setcycle 31 num_letters 6
	setcycle 31 type animal
	setcycle 31 prime bveear
	setcycle 31 target beaver
	setcycle 31 correct_response a
	setcycle 31 block block2
	setcycle 32 condition "semi-scrambled"
	setcycle 32 num_letters 6
	setcycle 32 type animal
	setcycle 32 prime juaagr
	setcycle 32 target jaguar
	setcycle 32 correct_response a
	setcycle 32 block block2
	setcycle 33 condition "semi-scrambled"
	setcycle 33 num_letters 6
	setcycle 33 type animal
	setcycle 33 prime wualrs
	setcycle 33 target walrus
	setcycle 33 correct_response a
	setcycle 33 block block2
	setcycle 34 condition "semi-scrambled"
	setcycle 34 num_letters 7
	setcycle 34 type animal
	setcycle 34 prime dlhoipn
	setcycle 34 target dolphin
	setcycle 34 correct_response a
	setcycle 34 block block2
	setcycle 35 condition "semi-scrambled"
	setcycle 35 num_letters 7
	setcycle 35 type animal
	setcycle 35 prime rooaccn
	setcycle 35 target raccoon
	setcycle 35 correct_response a
	setcycle 35 block block2
	setcycle 36 condition "semi-scrambled"
	setcycle 36 num_letters 8
	setcycle 36 type animal
	setcycle 36 prime apnleote
	setcycle 36 target antelope
	setcycle 36 correct_response a
	setcycle 36 block block2
	setcycle 37 condition "semi-scrambled"
	setcycle 37 num_letters 8
	setcycle 37 type animal
	setcycle 37 prime fgliamno
	setcycle 37 target flamingo
	setcycle 37 correct_response a
	setcycle 37 block block2
	setcycle 38 condition "semi-scrambled"
	setcycle 38 num_letters 8
	setcycle 38 type animal
	setcycle 38 prime pylaputs
	setcycle 38 target platypus
	setcycle 38 correct_response a
	setcycle 38 block block2
	setcycle 39 condition "semi-scrambled"
	setcycle 39 num_letters 4
	setcycle 39 type fruit_veg
	setcycle 39 prime pmoe
	setcycle 39 target pome
	setcycle 39 correct_response f
	setcycle 39 block block2
	setcycle 40 condition "semi-scrambled"
	setcycle 40 num_letters 4
	setcycle 40 type fruit_veg
	setcycle 40 prime pulm
	setcycle 40 target plum
	setcycle 40 correct_response f
	setcycle 40 block block2
	setcycle 41 condition "semi-scrambled"
	setcycle 41 num_letters 5
	setcycle 41 type fruit_veg
	setcycle 41 prime ooinn
	setcycle 41 target onion
	setcycle 41 correct_response f
	setcycle 41 block block2
	setcycle 42 condition "semi-scrambled"
	setcycle 42 num_letters 5
	setcycle 42 type fruit_veg
	setcycle 42 prime gapre
	setcycle 42 target grape
	setcycle 42 correct_response f
	setcycle 42 block block2
	setcycle 43 condition "semi-scrambled"
	setcycle 43 num_letters 5
	setcycle 43 type fruit_veg
	setcycle 43 prime punre
	setcycle 43 target prune
	setcycle 43 correct_response f
	setcycle 43 block block2
	setcycle 44 condition "semi-scrambled"
	setcycle 44 num_letters 6
	setcycle 44 type fruit_veg
	setcycle 44 prime croart
	setcycle 44 target carrot
	setcycle 44 correct_response f
	setcycle 44 block block2
	setcycle 45 condition "semi-scrambled"
	setcycle 45 num_letters 6
	setcycle 45 type fruit_veg
	setcycle 45 prime ograne
	setcycle 45 target orange
	setcycle 45 correct_response f
	setcycle 45 block block2
	setcycle 46 condition "semi-scrambled"
	setcycle 46 num_letters 6
	setcycle 46 type fruit_veg
	setcycle 46 prime susqah
	setcycle 46 target squash
	setcycle 46 correct_response f
	setcycle 46 block block2
	setcycle 47 condition "semi-scrambled"
	setcycle 47 num_letters 7
	setcycle 47 type fruit_veg
	setcycle 47 prime ccunoot
	setcycle 47 target coconut
	setcycle 47 correct_response f
	setcycle 47 block block2
	setcycle 48 condition "semi-scrambled"
	setcycle 48 num_letters 7
	setcycle 48 type fruit_veg
	setcycle 48 prime piukpmn
	setcycle 48 target pumpkin
	setcycle 48 correct_response f
	setcycle 48 block block2
	setcycle 49 condition "semi-scrambled"
	setcycle 49 num_letters 8
	setcycle 49 type fruit_veg
	setcycle 49 prime bclorcoi
	setcycle 49 target broccoli
	setcycle 49 correct_response f
	setcycle 49 block block2
	setcycle 50 condition "semi-scrambled"
	setcycle 50 num_letters 8
	setcycle 50 type fruit_veg
	setcycle 50 prime zcnhcuii
	setcycle 50 target zucchini
	setcycle 50 correct_response f
	setcycle 50 block block2
	setcycle 51 condition "semi-scrambled"
	setcycle 51 num_letters 8
	setcycle 51 type fruit_veg
	setcycle 51 prime ccbmeuur
	setcycle 51 target cucumber
	setcycle 51 correct_response f
	setcycle 51 block block2
	setcycle 52 condition "fully-scrambled"
	setcycle 52 num_letters 4
	setcycle 52 type animal
	setcycle 52 prime lulb
	setcycle 52 target bull
	setcycle 52 correct_response a
	setcycle 52 block block2
	setcycle 53 condition "fully-scrambled"
	setcycle 53 num_letters 4
	setcycle 53 type animal
	setcycle 53 prime ehar
	setcycle 53 target hare
	setcycle 53 correct_response a
	setcycle 53 block block2
	setcycle 54 condition "fully-scrambled"
	setcycle 54 num_letters 4
	setcycle 54 type animal
	setcycle 54 prime imkn
	setcycle 54 target mink
	setcycle 54 correct_response a
	setcycle 54 block block2
	setcycle 55 condition "fully-scrambled"
	setcycle 55 num_letters 5
	setcycle 55 type animal
	setcycle 55 prime alemc
	setcycle 55 target camel
	setcycle 55 correct_response a
	setcycle 55 block block2
	setcycle 56 condition "fully-scrambled"
	setcycle 56 num_letters 5
	setcycle 56 type animal
	setcycle 56 prime umeso
	setcycle 56 target mouse
	setcycle 56 correct_response a
	setcycle 56 block block2
	setcycle 57 condition "fully-scrambled"
	setcycle 57 num_letters 5
	setcycle 57 type animal
	setcycle 57 prime reigt
	setcycle 57 target tiger
	setcycle 57 correct_response a
	setcycle 57 block block2
	setcycle 58 condition "fully-scrambled"
	setcycle 58 num_letters 6
	setcycle 58 type animal
	setcycle 58 prime aruocg
	setcycle 58 target cougar
	setcycle 58 correct_response a
	setcycle 58 block block2
	setcycle 59 condition "fully-scrambled"
	setcycle 59 num_letters 6
	setcycle 59 type animal
	setcycle 59 prime briatb
	setcycle 59 target rabbit
	setcycle 59 correct_response a
	setcycle 59 block block2
	setcycle 60 condition "fully-scrambled"
	setcycle 60 num_letters 7
	setcycle 60 type animal
	setcycle 60 prime louaffb
	setcycle 60 target buffalo
	setcycle 60 correct_response a
	setcycle 60 block block2
	setcycle 61 condition "fully-scrambled"
	setcycle 61 num_letters 7
	setcycle 61 type animal
	setcycle 61 prime rgolial
	setcycle 61 target gorilla
	setcycle 61 correct_response a
	setcycle 61 block block2
	setcycle 62 condition "fully-scrambled"
	setcycle 62 num_letters 7
	setcycle 62 type animal
	setcycle 62 prime tupocsu
	setcycle 62 target octupus
	setcycle 62 correct_response a
	setcycle 62 block block2
	setcycle 63 condition "fully-scrambled"
	setcycle 63 num_letters 8
	setcycle 63 type animal
	setcycle 63 prime uchikmpn
	setcycle 63 target chipmunk
	setcycle 63 correct_response a
	setcycle 63 block block2
	setcycle 64 condition "fully-scrambled"
	setcycle 64 num_letters 8
	setcycle 64 type animal
	setcycle 64 prime stotoeir
	setcycle 64 target tortoise
	setcycle 64 correct_response a
	setcycle 64 block block2
	setcycle 65 condition "fully-scrambled"
	setcycle 65 num_letters 8
	setcycle 65 type animal
	setcycle 65 prime ooarkang
	setcycle 65 target kangaroo
	setcycle 65 correct_response a
	setcycle 65 block block2
	setcycle 66 condition "fully-scrambled"
	setcycle 66 num_letters 4
	setcycle 66 type fruit_veg
	setcycle 66 prime naeb
	setcycle 66 target bean
	setcycle 66 correct_response f
	setcycle 66 block block2
	setcycle 67 condition "fully-scrambled"
	setcycle 67 num_letters 4
	setcycle 67 type fruit_veg
	setcycle 67 prime ronc
	setcycle 67 target corn
	setcycle 67 correct_response f
	setcycle 67 block block2
	setcycle 68 condition "fully-scrambled"
	setcycle 68 num_letters 4
	setcycle 68 type fruit_veg
	setcycle 68 prime elim
	setcycle 68 target lime
	setcycle 68 correct_response f
	setcycle 68 block block2
	setcycle 69 condition "fully-scrambled"
	setcycle 69 num_letters 5
	setcycle 69 type fruit_veg
	setcycle 69 prime alagi
	setcycle 69 target galia
	setcycle 69 correct_response f
	setcycle 69 block block2
	setcycle 70 condition "fully-scrambled"
	setcycle 70 num_letters 5
	setcycle 70 type fruit_veg
	setcycle 70 prime gmoan
	setcycle 70 target mango
	setcycle 70 correct_response f
	setcycle 70 block block2
	setcycle 71 condition "fully-scrambled"
	setcycle 71 num_letters 5
	setcycle 71 type fruit_veg
	setcycle 71 prime cpeha
	setcycle 71 target peach
	setcycle 71 correct_response f
	setcycle 71 block block2
	setcycle 72 condition "fully-scrambled"
	setcycle 72 num_letters 6
	setcycle 72 type fruit_veg
	setcycle 72 prime hcreyr
	setcycle 72 target cherry
	setcycle 72 correct_response f
	setcycle 72 block block2
	setcycle 73 condition "fully-scrambled"
	setcycle 73 num_letters 6
	setcycle 73 type fruit_veg
	setcycle 73 prime eperpp
	setcycle 73 target pepper
	setcycle 73 correct_response f
	setcycle 73 block block2
	setcycle 74 condition "fully-scrambled"
	setcycle 74 num_letters 7
	setcycle 74 type fruit_veg
	setcycle 74 prime iotrapc
	setcycle 74 target apricot
	setcycle 74 correct_response f
	setcycle 74 block block2
	setcycle 75 condition "fully-scrambled"
	setcycle 75 num_letters 7
	setcycle 75 type fruit_veg
	setcycle 75 prime panhcsi
	setcycle 75 target spinach
	setcycle 75 correct_response f
	setcycle 75 block block2
	setcycle 76 condition "fully-scrambled"
	setcycle 76 num_letters 7
	setcycle 76 type fruit_veg
	setcycle 76 prime tleutec
	setcycle 76 target lettuce
	setcycle 76 correct_response f
	setcycle 76 block block2
	setcycle 77 condition "fully-scrambled"
	setcycle 77 num_letters 8
	setcycle 77 type fruit_veg
	setcycle 77 prime genlgtpa
	setcycle 77 target eggplant
	setcycle 77 correct_response f
	setcycle 77 block block2
	setcycle 78 condition "fully-scrambled"
	setcycle 78 num_letters 8
	setcycle 78 type fruit_veg
	setcycle 78 prime srommhuo
	setcycle 78 target mushroom
	setcycle 78 correct_response f
	setcycle 78 block block2
	setcycle 79 condition "fully-scrambled"
	setcycle 79 num_letters 8
	setcycle 79 type fruit_veg
	setcycle 79 prime ekahiccp
	setcycle 79 target chickpea
	setcycle 79 correct_response f
	setcycle 79 block block2
	run trials

define loop block_3
	set source_file ""
	set source table
	set repeat 1
	set order random
	set description "Repeatedly runs another item"
	set cycles 80
	set continuous no
	set break_if_on_first yes
	set break_if never
	setcycle 0 condition identical
	setcycle 0 num_letters 4
	setcycle 0 type animal
	setcycle 0 prime goat
	setcycle 0 target goat
	setcycle 0 correct_response a
	setcycle 0 block block3
	setcycle 1 condition identical
	setcycle 1 num_letters 4
	setcycle 1 type animal
	setcycle 1 prime lion
	setcycle 1 target lion
	setcycle 1 correct_response a
	setcycle 1 block block3
	setcycle 2 condition identical
	setcycle 2 num_letters 5
	setcycle 2 type animal
	setcycle 2 prime bison
	setcycle 2 target bison
	setcycle 2 correct_response a
	setcycle 2 block block3
	setcycle 3 condition identical
	setcycle 3 num_letters 5
	setcycle 3 type animal
	setcycle 3 prime koala
	setcycle 3 target koala
	setcycle 3 correct_response a
	setcycle 3 block block3
	setcycle 4 condition identical
	setcycle 4 num_letters 5
	setcycle 4 type animal
	setcycle 4 prime rhino
	setcycle 4 target rhino
	setcycle 4 correct_response a
	setcycle 4 block block3
	setcycle 5 condition identical
	setcycle 5 num_letters 6
	setcycle 5 type animal
	setcycle 5 prime beaver
	setcycle 5 target beaver
	setcycle 5 correct_response a
	setcycle 5 block block3
	setcycle 6 condition identical
	setcycle 6 num_letters 6
	setcycle 6 type animal
	setcycle 6 prime jaguar
	setcycle 6 target jaguar
	setcycle 6 correct_response a
	setcycle 6 block block3
	setcycle 7 condition identical
	setcycle 7 num_letters 6
	setcycle 7 type animal
	setcycle 7 prime walrus
	setcycle 7 target walrus
	setcycle 7 correct_response a
	setcycle 7 block block3
	setcycle 8 condition identical
	setcycle 8 num_letters 7
	setcycle 8 type animal
	setcycle 8 prime dolphin
	setcycle 8 target dolphin
	setcycle 8 correct_response a
	setcycle 8 block block3
	setcycle 9 condition identical
	setcycle 9 num_letters 7
	setcycle 9 type animal
	setcycle 9 prime raccoon
	setcycle 9 target raccoon
	setcycle 9 correct_response a
	setcycle 9 block block3
	setcycle 10 condition identical
	setcycle 10 num_letters 8
	setcycle 10 type animal
	setcycle 10 prime antelope
	setcycle 10 target antelope
	setcycle 10 correct_response a
	setcycle 10 block block3
	setcycle 11 condition identical
	setcycle 11 num_letters 8
	setcycle 11 type animal
	setcycle 11 prime flamingo
	setcycle 11 target flamingo
	setcycle 11 correct_response a
	setcycle 11 block block3
	setcycle 12 condition identical
	setcycle 12 num_letters 8
	setcycle 12 type animal
	setcycle 12 prime platypus
	setcycle 12 target platypus
	setcycle 12 correct_response a
	setcycle 12 block block3
	setcycle 13 condition identical
	setcycle 13 num_letters 4
	setcycle 13 type fruit_veg
	setcycle 13 prime pome
	setcycle 13 target pome
	setcycle 13 correct_response f
	setcycle 13 block block3
	setcycle 14 condition identical
	setcycle 14 num_letters 4
	setcycle 14 type fruit_veg
	setcycle 14 prime plum
	setcycle 14 target plum
	setcycle 14 correct_response f
	setcycle 14 block block3
	setcycle 15 condition identical
	setcycle 15 num_letters 5
	setcycle 15 type fruit_veg
	setcycle 15 prime onion
	setcycle 15 target onion
	setcycle 15 correct_response f
	setcycle 15 block block3
	setcycle 16 condition identical
	setcycle 16 num_letters 5
	setcycle 16 type fruit_veg
	setcycle 16 prime grape
	setcycle 16 target grape
	setcycle 16 correct_response f
	setcycle 16 block block3
	setcycle 17 condition identical
	setcycle 17 num_letters 5
	setcycle 17 type fruit_veg
	setcycle 17 prime prune
	setcycle 17 target prune
	setcycle 17 correct_response f
	setcycle 17 block block3
	setcycle 18 condition identical
	setcycle 18 num_letters 6
	setcycle 18 type fruit_veg
	setcycle 18 prime carrot
	setcycle 18 target carrot
	setcycle 18 correct_response f
	setcycle 18 block block3
	setcycle 19 condition identical
	setcycle 19 num_letters 6
	setcycle 19 type fruit_veg
	setcycle 19 prime orange
	setcycle 19 target orange
	setcycle 19 correct_response f
	setcycle 19 block block3
	setcycle 20 condition identical
	setcycle 20 num_letters 6
	setcycle 20 type fruit_veg
	setcycle 20 prime squash
	setcycle 20 target squash
	setcycle 20 correct_response f
	setcycle 20 block block3
	setcycle 21 condition identical
	setcycle 21 num_letters 7
	setcycle 21 type fruit_veg
	setcycle 21 prime coconut
	setcycle 21 target coconut
	setcycle 21 correct_response f
	setcycle 21 block block3
	setcycle 22 condition identical
	setcycle 22 num_letters 7
	setcycle 22 type fruit_veg
	setcycle 22 prime pumpkin
	setcycle 22 target pumpkin
	setcycle 22 correct_response f
	setcycle 22 block block3
	setcycle 23 condition identical
	setcycle 23 num_letters 8
	setcycle 23 type fruit_veg
	setcycle 23 prime broccoli
	setcycle 23 target broccoli
	setcycle 23 correct_response f
	setcycle 23 block block3
	setcycle 24 condition identical
	setcycle 24 num_letters 8
	setcycle 24 type fruit_veg
	setcycle 24 prime zucchini
	setcycle 24 target zucchini
	setcycle 24 correct_response f
	setcycle 24 block block3
	setcycle 25 condition identical
	setcycle 25 num_letters 8
	setcycle 25 type fruit_veg
	setcycle 25 prime cucumber
	setcycle 25 target cucumber
	setcycle 25 correct_response f
	setcycle 25 block block3
	setcycle 26 condition "semi-scrambled"
	setcycle 26 num_letters 4
	setcycle 26 type animal
	setcycle 26 prime blul
	setcycle 26 target bull
	setcycle 26 correct_response a
	setcycle 26 block block3
	setcycle 27 condition "semi-scrambled"
	setcycle 27 num_letters 4
	setcycle 27 type animal
	setcycle 27 prime hrae
	setcycle 27 target hare
	setcycle 27 correct_response a
	setcycle 27 block block3
	setcycle 28 condition "semi-scrambled"
	setcycle 28 num_letters 4
	setcycle 28 type animal
	setcycle 28 prime mnik
	setcycle 28 target mink
	setcycle 28 correct_response a
	setcycle 28 block block3
	setcycle 29 condition "semi-scrambled"
	setcycle 29 num_letters 5
	setcycle 29 type animal
	setcycle 29 prime cmeal
	setcycle 29 target camel
	setcycle 29 correct_response a
	setcycle 29 block block3
	setcycle 30 condition "semi-scrambled"
	setcycle 30 num_letters 5
	setcycle 30 type animal
	setcycle 30 prime msoue
	setcycle 30 target mouse
	setcycle 30 correct_response a
	setcycle 30 block block3
	setcycle 31 condition "semi-scrambled"
	setcycle 31 num_letters 5
	setcycle 31 type animal
	setcycle 31 prime teigr
	setcycle 31 target tiger
	setcycle 31 correct_response a
	setcycle 31 block block3
	setcycle 32 condition "semi-scrambled"
	setcycle 32 num_letters 6
	setcycle 32 type animal
	setcycle 32 prime cgaour
	setcycle 32 target cougar
	setcycle 32 correct_response a
	setcycle 32 block block3
	setcycle 33 condition "semi-scrambled"
	setcycle 33 num_letters 6
	setcycle 33 type animal
	setcycle 33 prime rbiabt
	setcycle 33 target rabbit
	setcycle 33 correct_response a
	setcycle 33 block block3
	setcycle 34 condition "semi-scrambled"
	setcycle 34 num_letters 7
	setcycle 34 type animal
	setcycle 34 prime bluaffo
	setcycle 34 target buffalo
	setcycle 34 correct_response a
	setcycle 34 block block3
	setcycle 35 condition "semi-scrambled"
	setcycle 35 num_letters 7
	setcycle 35 type animal
	setcycle 35 prime glilroa
	setcycle 35 target gorilla
	setcycle 35 correct_response a
	setcycle 35 block block3
	setcycle 36 condition "semi-scrambled"
	setcycle 36 num_letters 7
	setcycle 36 type animal
	setcycle 36 prime oputucs
	setcycle 36 target octupus
	setcycle 36 correct_response a
	setcycle 36 block block3
	setcycle 37 condition "semi-scrambled"
	setcycle 37 num_letters 8
	setcycle 37 type animal
	setcycle 37 prime cunhpmik
	setcycle 37 target chipmunk
	setcycle 37 correct_response a
	setcycle 37 block block3
	setcycle 38 condition "semi-scrambled"
	setcycle 38 num_letters 8
	setcycle 38 type animal
	setcycle 38 prime ttosorie
	setcycle 38 target tortoise
	setcycle 38 correct_response a
	setcycle 38 block block3
	setcycle 39 condition "semi-scrambled"
	setcycle 39 num_letters 8
	setcycle 39 type animal
	setcycle 39 prime knroaoga
	setcycle 39 target kangaroo
	setcycle 39 correct_response a
	setcycle 39 block block3
	setcycle 40 condition "semi-scrambled"
	setcycle 40 num_letters 4
	setcycle 40 type fruit_veg
	setcycle 40 prime baen
	setcycle 40 target bean
	setcycle 40 correct_response f
	setcycle 40 block block3
	setcycle 41 condition "semi-scrambled"
	setcycle 41 num_letters 4
	setcycle 41 type fruit_veg
	setcycle 41 prime cron
	setcycle 41 target corn
	setcycle 41 correct_response f
	setcycle 41 block block3
	setcycle 42 condition "semi-scrambled"
	setcycle 42 num_letters 4
	setcycle 42 type fruit_veg
	setcycle 42 prime lmie
	setcycle 42 target lime
	setcycle 42 correct_response f
	setcycle 42 block block3
	setcycle 43 condition "semi-scrambled"
	setcycle 43 num_letters 5
	setcycle 43 type fruit_veg
	setcycle 43 prime giala
	setcycle 43 target galia
	setcycle 43 correct_response f
	setcycle 43 block block3
	setcycle 44 condition "semi-scrambled"
	setcycle 44 num_letters 5
	setcycle 44 type fruit_veg
	setcycle 44 prime mgano
	setcycle 44 target mango
	setcycle 44 correct_response f
	setcycle 44 block block3
	setcycle 45 condition "semi-scrambled"
	setcycle 45 num_letters 5
	setcycle 45 type fruit_veg
	setcycle 45 prime paceh
	setcycle 45 target peach
	setcycle 45 correct_response f
	setcycle 45 block block3
	setcycle 46 condition "semi-scrambled"
	setcycle 46 num_letters 6
	setcycle 46 type fruit_veg
	setcycle 46 prime crhery
	setcycle 46 target cherry
	setcycle 46 correct_response f
	setcycle 46 block block3
	setcycle 47 condition "semi-scrambled"
	setcycle 47 num_letters 6
	setcycle 47 type fruit_veg
	setcycle 47 prime ppeepr
	setcycle 47 target pepper
	setcycle 47 correct_response f
	setcycle 47 block block3
	setcycle 48 condition "semi-scrambled"
	setcycle 48 num_letters 7
	setcycle 48 type fruit_veg
	setcycle 48 prime aocpirt
	setcycle 48 target apricot
	setcycle 48 correct_response f
	setcycle 48 block block3
	setcycle 49 condition "semi-scrambled"
	setcycle 49 num_letters 7
	setcycle 49 type fruit_veg
	setcycle 49 prime snpicah
	setcycle 49 target spinach
	setcycle 49 correct_response f
	setcycle 49 block block3
	setcycle 50 condition "semi-scrambled"
	setcycle 50 num_letters 7
	setcycle 50 type fruit_veg
	setcycle 50 prime lteucte
	setcycle 50 target lettuce
	setcycle 50 correct_response f
	setcycle 50 block block3
	setcycle 51 condition "semi-scrambled"
	setcycle 51 num_letters 8
	setcycle 51 type fruit_veg
	setcycle 51 prime eangglpt
	setcycle 51 target eggplant
	setcycle 51 correct_response f
	setcycle 51 block block3
	setcycle 52 condition "semi-scrambled"
	setcycle 52 num_letters 8
	setcycle 52 type fruit_veg
	setcycle 52 prime mohrousm
	setcycle 52 target mushroom
	setcycle 52 correct_response f
	setcycle 52 block block3
	setcycle 53 condition "semi-scrambled"
	setcycle 53 num_letters 8
	setcycle 53 type fruit_veg
	setcycle 53 prime cekicaph
	setcycle 53 target chickpea
	setcycle 53 correct_response f
	setcycle 53 block block3
	setcycle 54 condition "fully-scrambled"
	setcycle 54 num_letters 4
	setcycle 54 type animal
	setcycle 54 prime lcfa
	setcycle 54 target calf
	setcycle 54 correct_response a
	setcycle 54 block block3
	setcycle 55 condition "fully-scrambled"
	setcycle 55 num_letters 4
	setcycle 55 type animal
	setcycle 55 prime bmal
	setcycle 55 target lamb
	setcycle 55 correct_response a
	setcycle 55 block block3
	setcycle 56 condition "fully-scrambled"
	setcycle 56 num_letters 4
	setcycle 56 type animal
	setcycle 56 prime amup
	setcycle 56 target puma
	setcycle 56 correct_response a
	setcycle 56 block block3
	setcycle 57 condition "fully-scrambled"
	setcycle 57 num_letters 5
	setcycle 57 type animal
	setcycle 57 prime rhseo
	setcycle 57 target horse
	setcycle 57 correct_response a
	setcycle 57 block block3
	setcycle 58 condition "fully-scrambled"
	setcycle 58 num_letters 5
	setcycle 58 type animal
	setcycle 58 prime anpad
	setcycle 58 target panda
	setcycle 58 correct_response a
	setcycle 58 block block3
	setcycle 59 condition "fully-scrambled"
	setcycle 59 num_letters 6
	setcycle 59 type animal
	setcycle 59 prime bmotwa
	setcycle 59 target wombat
	setcycle 59 correct_response a
	setcycle 59 block block3
	setcycle 60 condition "fully-scrambled"
	setcycle 60 num_letters 6
	setcycle 60 type animal
	setcycle 60 prime oynked
	setcycle 60 target donkey
	setcycle 60 correct_response a
	setcycle 60 block block3
	setcycle 61 condition "fully-scrambled"
	setcycle 61 num_letters 6
	setcycle 61 type animal
	setcycle 61 prime ettlur
	setcycle 61 target turtle
	setcycle 61 correct_response a
	setcycle 61 block block3
	setcycle 62 condition "fully-scrambled"
	setcycle 62 num_letters 7
	setcycle 62 type animal
	setcycle 62 prime ekhicnc
	setcycle 62 target chicken
	setcycle 62 correct_response a
	setcycle 62 block block3
	setcycle 63 condition "fully-scrambled"
	setcycle 63 num_letters 7
	setcycle 63 type animal
	setcycle 63 prime rhtamse
	setcycle 63 target hamster
	setcycle 63 correct_response a
	setcycle 63 block block3
	setcycle 64 condition "fully-scrambled"
	setcycle 64 num_letters 7
	setcycle 64 type animal
	setcycle 64 prime nieugnp
	setcycle 64 target penguin
	setcycle 64 correct_response a
	setcycle 64 block block3
	setcycle 65 condition "fully-scrambled"
	setcycle 65 num_letters 8
	setcycle 65 type animal
	setcycle 65 prime teneahpl
	setcycle 65 target elephant
	setcycle 65 correct_response a
	setcycle 65 block block3
	setcycle 66 condition "fully-scrambled"
	setcycle 66 num_letters 8
	setcycle 66 type animal
	setcycle 66 prime aaesoehr
	setcycle 66 target seahorse
	setcycle 66 correct_response a
	setcycle 66 block block3
	setcycle 67 condition "fully-scrambled"
	setcycle 67 num_letters 4
	setcycle 67 type fruit_veg
	setcycle 67 prime taed
	setcycle 67 target date
	setcycle 67 correct_response f
	setcycle 67 block block3
	setcycle 68 condition "fully-scrambled"
	setcycle 68 num_letters 4
	setcycle 68 type fruit_veg
	setcycle 68 prime epra
	setcycle 68 target pear
	setcycle 68 correct_response f
	setcycle 68 block block3
	setcycle 69 condition "fully-scrambled"
	setcycle 69 num_letters 4
	setcycle 69 type fruit_veg
	setcycle 69 prime lkea
	setcycle 69 target kale
	setcycle 69 correct_response f
	setcycle 69 block block3
	setcycle 70 condition "fully-scrambled"
	setcycle 70 num_letters 5
	setcycle 70 type fruit_veg
	setcycle 70 prime monel
	setcycle 70 target lemon
	setcycle 70 correct_response f
	setcycle 70 block block3
	setcycle 71 condition "fully-scrambled"
	setcycle 71 num_letters 5
	setcycle 71 type fruit_veg
	setcycle 71 prime levio
	setcycle 71 target olive
	setcycle 71 correct_response f
	setcycle 71 block block3
	setcycle 72 condition "fully-scrambled"
	setcycle 72 num_letters 6
	setcycle 72 type fruit_veg
	setcycle 72 prime struci
	setcycle 72 target citrus
	setcycle 72 correct_response f
	setcycle 72 block block3
	setcycle 73 condition "fully-scrambled"
	setcycle 73 num_letters 6
	setcycle 73 type fruit_veg
	setcycle 73 prime aglrci
	setcycle 73 target garlic
	setcycle 73 correct_response f
	setcycle 73 block block3
	setcycle 74 condition "fully-scrambled"
	setcycle 74 num_letters 6
	setcycle 74 type fruit_veg
	setcycle 74 prime toatop
	setcycle 74 target potato
	setcycle 74 correct_response f
	setcycle 74 block block3
	setcycle 75 condition "fully-scrambled"
	setcycle 75 num_letters 7
	setcycle 75 type fruit_veg
	setcycle 75 prime oacvdoa
	setcycle 75 target avocado
	setcycle 75 correct_response f
	setcycle 75 block block3
	setcycle 76 condition "fully-scrambled"
	setcycle 76 num_letters 7
	setcycle 76 type fruit_veg
	setcycle 76 prime urbarbh
	setcycle 76 target rhubarb
	setcycle 76 correct_response f
	setcycle 76 block block3
	setcycle 77 condition "fully-scrambled"
	setcycle 77 num_letters 7
	setcycle 77 type fruit_veg
	setcycle 77 prime isaprpn
	setcycle 77 target parsnip
	setcycle 77 correct_response f
	setcycle 77 block block3
	setcycle 78 condition "fully-scrambled"
	setcycle 78 num_letters 8
	setcycle 78 type fruit_veg
	setcycle 78 prime liscanlo
	setcycle 78 target scallion
	setcycle 78 correct_response f
	setcycle 78 block block3
	setcycle 79 condition "fully-scrambled"
	setcycle 79 num_letters 8
	setcycle 79 type fruit_veg
	setcycle 79 prime toroetbe
	setcycle 79 target beetroot
	setcycle 79 correct_response f
	setcycle 79 block block3
	run trials

define sketchpad break
	set duration keypress
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=30 html=yes show_if=always text="Half-way!<br /><br />Time for a break.<br /><br />Press any key to start the final part of the experiment..<br />" x=0 y=0 z_index=0

define sketchpad correct
	set duration 1000
	set description "Displays stimuli"
	draw textline center=1 color=green font_bold=no font_family=mono font_italic=no font_size=30 html=yes show_if=always text="Correct!" x=0 y=0 z_index=0

define inline_javascript counter_balance
	set description "Executes JavaScript code"
	___run__
	Array.prototype.random = function () {
	  return this[Math.floor((Math.random()*this.length))];
	}
	
	var list = [1,2,3]
	
	vars.block_picker = list.random()
	__end__
	set _prepare ""

define sequence experiment
	set flush_keyboard yes
	set description "Runs a number of items in sequence"
	run counter_balance always
	run instructions_1 always
	run instructions_2 always
	run instructions_3 always
	run start always
	run practice_loop always
	run instructions_4 always
	run block_1 "[block_picker] = 1"
	run block_2 "[block_picker] = 2"
	run block_3 "[block_picker] = 3"

define sketchpad fix
	set duration 1000
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=60 html=yes show_if=always text="+" x=0 y=0 z_index=0

define sketchpad forward_mask
	set duration 32
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=30 html=yes show_if=always text="********" x=0 y=0 z_index=0

define sketchpad incorrect
	set duration 1000
	set description "Displays stimuli"
	draw textline center=1 color=red font_bold=no font_family=mono font_italic=no font_size=30 html=yes show_if=always text="Incorrect!" x=0 y=0 z_index=0

define sketchpad instructions
	set duration keypress
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="When you see a word, decide if it is an animal or a fruit/vegetable.<br /><br />Press a for animal<br />Press f for fruit/vegetable<br /><br />Press any key to continue.." x=0 y=0 z_index=0

define sketchpad instructions_1
	set duration keypress
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=20 html=yes show_if=always text="In this experiment, you will see some words, separated by +.<br />When you see a word, decide if it is an animal or a fruit/vegetable.<br />Press the A key if it is an animal<br />Press the F key if it is a fruit or vegetable<br />After each word, you will receive feedback as to whether you responded correctly or incorrectly.<br />Try to respond as quickly and accurately as you can.<br />Press any key to continue…<br />" x=0 y=0 z_index=0

define sketchpad instructions_2
	set duration keypress
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=20 html=yes show_if=always text="The whole experiment will take around 5 minutes to complete.<br />There will be a break halfway through the experiment.<br />Press any key to continue…<br /><br />" x=0 y=0 z_index=0

define sketchpad instructions_3
	set duration keypress
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=20 html=yes show_if=always text="First there will be a short test round. <br />Press any key to continue…<br />" x=0 y=0 z_index=0

define sketchpad instructions_4
	set duration keypress
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=20 html=yes show_if=always text="Now the test round is finished and the real experiment will begin.<br />Remember to respond as quickly and accurately as you can. <br />If you make a mistake, don’t worry, just continue to the next word.<br />Press any key to begin the experiment…<br />" x=0 y=0 z_index=0

define keyboard_response keyboard_response
	set timeout 2000
	set flush yes
	set event_type keypress
	set duration keypress
	set description "Collects keyboard responses"

define logger logger
	set description "Logs experimental data"
	set auto_log yes

define loop practice_loop
	set source table
	set repeat 1
	set order random
	set description "Repeatedly runs another item"
	set cycles 1
	set continuous no
	set break_if_on_first yes
	set break_if never
	setcycle 0 condition ""
	setcycle 0 num_letters ""
	setcycle 0 type ""
	setcycle 0 prime ""
	setcycle 0 target ""
	setcycle 0 correct_response ""
	setcycle 0 block ""
	run trials

define sketchpad prime
	set duration 30
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=30 html=yes show_if=always text="[prime]" x=0 y=0 z_index=0

define sketchpad start
	set duration keypress
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="Press any key to start the experiment." x=0 y=0 z_index=0

define sketchpad target
	set duration 0
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=30 html=yes show_if=always text="[target]" x=0 y=0 z_index=0

define sequence trials
	set flush_keyboard yes
	set description "Runs a number of items in sequence"
	run break "[count_break] = 40"
	run fix always
	run forward_mask always
	run prime always
	run backward_mask always
	run target always
	run keyboard_response always
	run logger always
	run incorrect "[correct] = 0"
	run correct "[correct] = 1"

